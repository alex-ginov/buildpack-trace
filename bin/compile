#!/bin/bash

set -e

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
basedir="$( cd -P "$( dirname "$0" )" && pwd )"
BUILDPACK_DIR="$(readlink -f ${basedir}/..)"
source ${BUILDPACK_DIR}/lib/common.sh

if [ -n "$BUILDPACK_DEBUG" ]; then
  set -x
fi

TEMPO_VERSION="${TEMPO_VERSION:-"1.5.0"}"

install_tempo() {
  local BUILD_DIR="${1}"
  local CACHE_DIR="${2}"

  tempo_dist="tempo-${TEMPO_VERSION}-linux-amd64"
  tempo_archive="${tempo_dist}.tar.gz"
  tempo_url="https://github.com/grafana/tempo/releases/download/v${TEMPO_VERSION}"

  if [[ -f "$CACHE_DIR/.TEMPO_VERSION" ]]; then
    old_version=$(cat $CACHE_DIR/.TEMPO_VERSION)
    if [[ $old_version != $TEMPO_VERSION ]]; then
      echo "New Tempo version installation, cleaning the cache for the old version"
      rm -f $CACHE_DIR/$old_version.tar.gz ${CACHE_DIR}/${tempo_archive}*
    fi
  fi

  if [[ ! -f "$CACHE_DIR/${tempo_archive}" ]]; then
    echo -n "Downloading the Tempo ${TEMPO_VERSION} archive..."
    curl --silent --fail --location --retry 3 --retry-delay 2 --connect-timeout 3 --max-time 30 --output ${CACHE_DIR}/${tempo_archive} "${tempo_url}/${tempo_archive}"
    echo " done"
    echo $TEMPO_VERSION > ${CACHE_DIR}/.TEMPO_VERSION
  else
    echo "Get the Tempo ${TEMPO_VERSION} archive from the cache"
  fi

  echo -n "Extracting Tempo..."
  tar -xzf ${CACHE_DIR}/${tempo_archive} -C $CACHE_DIR
  cp ${CACHE_DIR}/${tempo_dist}/tempo ${BUILD_DIR}/bin/
  chmod +x ${BUILD_DIR}/bin/tempo
  echo " done"
}

mkdir -p $CACHE_DIR
export_env_dir "$ENV_DIR"

install_tempo ${BUILD_DIR} ${CACHE_DIR}